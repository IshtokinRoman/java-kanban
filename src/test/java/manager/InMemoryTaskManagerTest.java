package manager;

import model.Epic;
import model.Subtask;
import model.Task;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class InMemoryTaskManagerTest {

    private TaskManager taskManager;

    @BeforeEach
    void setUp() {
        taskManager = Managers.getDefault();
    }

    @Test
    void shouldAddAndFindTaskById() {
        Task task = new Task("Task1", "desc");
        taskManager.addTask(task);

        Task savedTask = taskManager.getTaskById(task.getId());

        assertNotNull(savedTask);
    }

    @Test
    void shouldAddAndFindEpicById() {
        Epic epic = new Epic("Epic1", "desc");
        taskManager.addEpic(epic);

        Epic savedEpic = taskManager.getEpicById(epic.getId());

        assertNotNull(savedEpic);
    }

    @Test
    void shouldAddAndFindSubtaskById() {
        Epic epic = new Epic("Epic1", "desc");
        taskManager.addEpic(epic);

        Subtask subtask = new Subtask("Subtask1", "desc", epic.getId());
        taskManager.addSubtask(subtask);

        Subtask savedSubtask = taskManager.getSubtaskById(subtask.getId());

        assertNotNull(savedSubtask);
    }

    @Test
    void shouldNotConflictManualAndAutoGeneratedId() {

        Task manualTask = new Task("Task1", "desc");
        manualTask.setId(100);
        taskManager.addTask(manualTask);

        Task autoTask = new Task("Task2", "desc");
        taskManager.addTask(autoTask);

        assertEquals(100, manualTask.getId());
        assertNotEquals(100, autoTask.getId());
        assertNotNull(taskManager.getTaskById(100));
        assertNotNull(taskManager.getTaskById(autoTask.getId()));
    }

    @Test
    void taskShouldRemainUnchangedAfterAddingToManager() {
        Task originalTask = new Task("Task", "desc");

        taskManager.addTask(originalTask);
        Task retrievedTask = taskManager.getTaskById(originalTask.getId());
        assertEquals(originalTask.toString(), retrievedTask.toString());
    }
}